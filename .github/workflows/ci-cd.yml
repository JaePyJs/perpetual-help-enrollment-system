name: School Enrollment System CI/CD

on:
  push:
    branches: [main, development]
  pull_request:
    branches: [main, development]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: coverage/
        if: always()

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/

  deploy-dev:
    name: Deploy to Development
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    needs: build
    environment: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: dist

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # Required secret
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # Required secret
          aws-region: us-east-1

      - name: Deploy to AWS S3
        run: aws s3 sync dist/ s3://school-enrollment-dev --delete

      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.DEV_CLOUDFRONT_DISTRIBUTION }} --paths "/*"

      - name: Send deployment notification
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "âœ… Development deployment completed for School Enrollment System\nBranch: ${{ github.ref_name }}\nCommit: ${{ github.sha }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # Required secret

  deploy-prod:
    name: Deploy to Production
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: dist

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # Required secret
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # Required secret
          aws-region: us-east-1

      - name: Deploy to AWS S3
        run: aws s3 sync dist/ s3://school-enrollment-prod --delete

      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.PROD_CLOUDFRONT_DISTRIBUTION }} --paths "/*"

      - name: Send deployment notification
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "ðŸš€ Production deployment completed for School Enrollment System\nBranch: ${{ github.ref_name }}\nCommit: ${{ github.sha }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # Required secret

  database-migration:
    name: Run Database Migrations
    runs-on: ubuntu-latest
    needs: [deploy-dev, deploy-prod]
    if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Set environment
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            echo "DB_ENV=production" >> $GITHUB_ENV
          else
            echo "DB_ENV=development" >> $GITHUB_ENV
          fi

      - name: Run migrations
        run: npm run migrate -- --env=${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
        env:
          MONGODB_URI: ${{ github.ref == 'refs/heads/main' && secrets.PROD_MONGODB_URI || secrets.DEV_MONGODB_URI }} # Required secret for both production and development

      - name: Send migration notification
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "âœ… Database migrations completed for ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }} environment\nBranch: ${{ github.ref_name }}\nCommit: ${{ github.sha }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # Required secret
